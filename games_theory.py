'''Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней.
 Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в кучу один камень,
добавить два камня или увеличить количество камней в куче в два раза. При этом нельзя повторять ход,
который только что сделал второй игрок.
 Игра завершается, когда количество камней в куче становится не менее 50. Победителем считается игрок,
сделавший последний ход, то есть первым получивший кучу, в которой будет 50 или больше камней.
В начальный момент в куче было S камней, 1 ⩽ S ⩽ 49.
Найдите значение S, при котором у Вани есть выигрышная стратегия,
позволяющая ему выиграть вторым ходом при любой игре Пети,
но у Вани нет стратегии, которая позволяла бы ему гарантированно выиграть первым ходом.'''


def f(x, p, l):
    # функция принимает на вход кол-во камней,позицию игрока(Петя-1,3,5, а Ваня 2,4,6), прошлый ход
    if x >= 50 and p == 5: 
        # выигрыш при кол-во камней больше 50 и следующим ходил бы Петя
        return True
    elif (x < 50 and p == 5) or x >= 50:
        # проигрыш, если не набралось столько камней или выграл Петя
        return False
    if p == 1 or p == 3: 
        # ходы для Пети
        if l == 1:
            return f(x + 2, p + 1, 2) and f(x * 2, p + 1, 3)
        elif l == 2:
            return f(x + 1, p + 1, 1) and f(x * 2, p + 1, 3)
        elif l == 3:
            return f(x + 2, p + 1, 2) and f(x + 1, p + 1, 1)
        # на первом ходу для Пети нет прошлого хода, поэтому он может сделать все три действия:
        return f(x + 2, p + 1, 2) and f(x + 1, p + 1, 1) and f(x * 2, p + 1, 3)

    elif p == 2 or p == 4:
        # ходы для Вани
        if l == 1:
            return f(x + 2, p + 1, 2) or f(x * 2, p + 1, 3)
        elif l == 2:
            return f(x + 1, p + 1, 1) or f(x * 2, p + 1, 3)
        elif l == 3:
            return f(x + 2, p + 1, 2) or f(x + 1, p + 1, 1)

# перебор начального кол-ва камней и проверка на выигрышную стратегию
for i in range(1, 49):
    if f(i, 1, 0) == True:
        print(i)
